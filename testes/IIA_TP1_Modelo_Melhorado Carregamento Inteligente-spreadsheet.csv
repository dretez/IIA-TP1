"BehaviorSpace results (NetLogo 6.4.0)","Spreadsheet version 2.0"
"IIA_TP1_Modelo_Melhorado.nlogo"
"Carregamento Inteligente"
"10/21/2024 04:24:19:769 +0100"
"min-pxcor","max-pxcor","min-pycor","max-pycor"
"-15","15","-15","15"
"[run number]","1","1","1","1","2","2","2","2","3","3","3","3","4","4","4","4","5","5","5","5","6","6","6","6","7","7","7","7","8","8","8","8","9","9","9","9","10","10","10","10","11","11","11","11","12","12","12","12","13","13","13","13","14","14","14","14","15","15","15","15","16","16","16","16","17","17","17","17","18","18","18","18","19","19","19","19","20","20","20","20","21","21","21","21","22","22","22","22","23","23","23","23","24","24","24","24","25","25","25","25","26","26","26","26","27","27","27","27","28","28","28","28","29","29","29","29","30","30","30","30","31","31","31","31","32","32","32","32","33","33","33","33","34","34","34","34","35","35","35","35","36","36","36","36","37","37","37","37","38","38","38","38","39","39","39","39","40","40","40","40","41","41","41","41","42","42","42","42","43","43","43","43","44","44","44","44","45","45","45","45","46","46","46","46","47","47","47","47","48","48","48","48","49","49","49","49","50","50","50","50","51","51","51","51","52","52","52","52","53","53","53","53","54","54","54","54","55","55","55","55","56","56","56","56","57","57","57","57","58","58","58","58","59","59","59","59","60","60","60","60"
"carregamento-inteligente?","false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"false",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,,"true",,,
"Lixo","40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,,"40",,,
"[total steps]","682","682","682","682","985","985","985","985","805","805","805","805","861","861","861","861","892","892","892","892","10000","10000","10000","10000","724","724","724","724","1221","1221","1221","1221","1212","1212","1212","1212","10000","10000","10000","10000","765","765","765","765","10000","10000","10000","10000","689","689","689","689","846","846","846","846","815","815","815","815","731","731","731","731","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","1185","1185","1185","1185","10000","10000","10000","10000","637","637","637","637","730","730","730","730","1274","1274","1274","1274","1146","1146","1146","1146","10000","10000","10000","10000","10000","10000","10000","10000","741","741","741","741","440","440","440","440","10000","10000","10000","10000","923","923","923","923","383","383","383","383","1087","1087","1087","1087","405","405","405","405","10000","10000","10000","10000","10000","10000","10000","10000","382","382","382","382","10000","10000","10000","10000","852","852","852","852","10000","10000","10000","10000","473","473","473","473","620","620","620","620","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","940","940","940","940","573","573","573","573","802","802","802","802","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","683","683","683","683","702","702","702","702","10000","10000","10000","10000","10000","10000","10000","10000"

"[final value]","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks","[step]","count turtles","(count patches with [pcolor = red]) / (count patches) * 100","ticks"
,"682","16","0","682","985","19","0","985","805","18","0","805","861","19","0","861","892","17","0","892","10000","19","0.10405827263267431","10000","724","18","0","724","1221","20","0","1221","1212","11","0","1212","10000","12","0.10405827263267431","10000","765","20","0","765","10000","19","0.10405827263267431","10000","689","20","0","689","846","17","0","846","815","11","0","815","731","20","0","731","10000","17","11.030176899063475","10000","10000","1","0.10405827263267431","10000","10000","19","0.10405827263267431","10000","1185","18","0","1185","10000","18","0.10405827263267431","10000","637","20","0","637","730","19","0","730","1274","14","0","1274","1146","17","0","1146","10000","4","11.86264308012487","10000","10000","1","0.72840790842872","10000","741","13","0","741","440","0","26.11862643080125","440","10000","10","0.20811654526534862","10000","923","0","3.537981269510926","923","383","0","20.395421436004163","383","1087","0","1.040582726326743","1087","405","0","17.377731529656607","405","10000","1","10.509885535900104","10000","10000","2","12.695109261186262","10000","382","0","15.71279916753382","382","10000","3","16.337148803329864","10000","852","0","6.659729448491156","852","10000","2","9.989594172736732","10000","473","0","28.720083246618106","473","620","0","6.763787721123829","620","10000","1","6.659729448491156","10000","10000","1","15.71279916753382","10000","10000","1","14.880332986472425","10000","10000","2","5.723204994797086","10000","10000","1","13.111342351716962","10000","10000","1","8.949011446409989","10000","940","0","5.515088449531738","940","573","0","9.053069719042664","573","802","0","1.2486992715920915","802","10000","4","11.966701352757545","10000","10000","2","21.12382934443288","10000","10000","3","18.41831425598335","10000","10000","1","22.372528616024976","10000","10000","1","19.250780437044746","10000","683","0","4.578563995837669","683","702","0","4.994797086368366","702","10000","1","12.486992715920914","10000","10000","1","8.949011446409989","10000"
